struct weaponComponent
{
  virtual void activateComponent(float) = 0; //value to set for curPos

    //sorted array using 'triggerPos' as key 
  std::vector<triggerStage>ti[];
  string name;
  float curPos;
};

struct bolt: public weaponComponent
{
  enum stages
  {
    Open,
    Chamber,
    Extract,
    Eject,
    Close
  }

  enum states
  {
    Before,
    UpTo,
    After
  }

  void activateComponent(float);
  void activateComponent(states, stages);
};

struct triggerStage
{
  void activateStage();

    // changeInPos / time(seconds)
  void rateOfPosChangeFixed(float);

    // seconds to get to newPos; (newPos - curPos) / time[in seconds]
  void rateOfPosChangeRelative(float);

  float triggerPos;         //value from 0.0f to 1.0f for this stage to be activated
  float rateOfChangeFactor; //rate at which to APPROACH this stage
};